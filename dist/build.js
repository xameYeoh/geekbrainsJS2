(()=>{"use strict";Vue.component("goods-search",{template:'\n        <input type="text" class="goods-search" v-on:input="$emit(\'input\', $event.target.value)"/>\n        '}),Vue.component("cart",{props:["cartVisibility","cart","removeFromCart"],template:'\n        <div class="cart" v-if="cartVisibility">\n                        <h2>Cart</h2>\n                        <div class="cart-list">\n                            <cart-item v-for="good in cart" :good="good" :removeFromCart="removeFromCart"></cart-item>\n                        </div>\n                    </div>\n        '}),Vue.component("cart-item",{props:["good","removeFromCart"],template:'\n        <div class="cart-item">\n                <h3>{{ good.product_name }}</h3>\n                <p>{{ good.price }}</p>\n                <p> {{good.quantity}}</p>\n                <button class="remove-button" type="button" @click="removeFromCart(good.id_product)">Remove</button>\n        </div>\n        '}),Vue.component("goods-list",{props:["goods","addToCart"],template:'<div class="goods-list">\n                            <goods-item v-for="good in goods" :good="good" :addToCart="addToCart"></goods-item>\n    \n                </div>'}),Vue.component("goods-item",{props:["good","addToCart"],template:'\n        <div class="goods-item">\n            <h3>{{ good.product_name }}</h3>\n            <p>{{ good.price }}</p>\n            <button class="add-button" type="button" @click="addToCart(good.id_product)">Buy</button>\n           \n        </div>\n        '}),new Vue({el:"#app",data:{goods:[],searchLine:"",isVisibleCart:!1,cart:[]},template:'\n        <div>\n        <header>\n            <goods-search v-model="searchLine"></goods-search>\n            <button class="cart-button" type="button" @click="cartToggler">Cart</button>\n        </header>\n        <main>\n            <div class="container">\n                <h2>eShop</h2>\n                <goods-list :goods="filteredGoods" :addToCart="addToCart"></goods-list>\n                <p v-if="noGoods">Нет данных</p>\n                <cart :cart-visibility="isVisibleCart" :cart="cart" :removeFromCart = "removeFromCart"></cart>\n            </div>\n        </main>\n   </div>\n    ',methods:{makeGETRequest:t=>new Promise((e=>{var o;window.XMLHttpRequest?o=new XMLHttpRequest:window.ActiveXObject&&(o=new ActiveXObject("Microsoft.XMLHTTP")),o.onreadystatechange=function(){4===o.readyState&&e(o.responseText)},o.open("GET",t,!0),o.send()})),makePOSTRequest(t,e,o){let n;window.XMLHttpRequest?n=new XMLHttpRequest:window.ActiveXObject&&(n=new ActiveXObject("Microsoft.XMLHTTP")),n.onreadystatechange=function(){4===n.readyState&&o(n.responseText)},n.open("POST",t,!0),n.setRequestHeader("Content-Type","application/json; charset=UTF-8"),n.send(e)},cartToggler(){return this.isVisibleCart=!this.isVisibleCart},returnSearchLine(){return this.searchLine},addToCart(t){let e=this.goods.find((e=>e.id_product==t)),o=this.cart.find((t=>t==e));o?o.quantity++:(this.cart.push(e),this.$set(this.cart[this.cart.length-1],"quantity",1)),console.log(this.cart)},removeFromCart(t){let e=this.goods.find((e=>e.id_product==t));1==e.quantity?this.cart.splice(this.goods.indexOf(e)):e.quantity--}},computed:{filteredGoods(){return this.goods.filter((t=>t.product_name.includes(this.searchLine)))},noGoods(){return 0==this.filteredGoods.length}},mounted(){this.makeGETRequest("/catalogData").then((t=>{this.goods=JSON.parse(t)}))}})})();